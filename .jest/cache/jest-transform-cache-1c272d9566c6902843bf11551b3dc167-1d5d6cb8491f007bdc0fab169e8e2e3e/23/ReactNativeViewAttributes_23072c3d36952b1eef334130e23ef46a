f01cf2f7ba9b55b5ec5d03e55105a719
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ReactNativeStyleAttributes = require("./ReactNativeStyleAttributes");

var UIView = {
  pointerEvents: true,
  accessible: true,
  accessibilityActions: true,
  accessibilityLabel: true,
  accessibilityLiveRegion: true,
  accessibilityRole: true,
  accessibilityStates: true,
  accessibilityState: true,
  accessibilityHint: true,
  importantForAccessibility: true,
  nativeID: true,
  testID: true,
  renderToHardwareTextureAndroid: true,
  shouldRasterizeIOS: true,
  onLayout: true,
  onAccessibilityAction: true,
  onAccessibilityTap: true,
  onMagicTap: true,
  onAccessibilityEscape: true,
  collapsable: true,
  needsOffscreenAlphaCompositing: true,
  style: ReactNativeStyleAttributes
};

var RCTView = _objectSpread(_objectSpread({}, UIView), {}, {
  removeClippedSubviews: true
});

var ReactNativeViewAttributes = {
  UIView: UIView,
  RCTView: RCTView
};
module.exports = ReactNativeViewAttributes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMuanMiXSwibmFtZXMiOlsiUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMiLCJyZXF1aXJlIiwiVUlWaWV3IiwicG9pbnRlckV2ZW50cyIsImFjY2Vzc2libGUiLCJhY2Nlc3NpYmlsaXR5QWN0aW9ucyIsImFjY2Vzc2liaWxpdHlMYWJlbCIsImFjY2Vzc2liaWxpdHlMaXZlUmVnaW9uIiwiYWNjZXNzaWJpbGl0eVJvbGUiLCJhY2Nlc3NpYmlsaXR5U3RhdGVzIiwiYWNjZXNzaWJpbGl0eVN0YXRlIiwiYWNjZXNzaWJpbGl0eUhpbnQiLCJpbXBvcnRhbnRGb3JBY2Nlc3NpYmlsaXR5IiwibmF0aXZlSUQiLCJ0ZXN0SUQiLCJyZW5kZXJUb0hhcmR3YXJlVGV4dHVyZUFuZHJvaWQiLCJzaG91bGRSYXN0ZXJpemVJT1MiLCJvbkxheW91dCIsIm9uQWNjZXNzaWJpbGl0eUFjdGlvbiIsIm9uQWNjZXNzaWJpbGl0eVRhcCIsIm9uTWFnaWNUYXAiLCJvbkFjY2Vzc2liaWxpdHlFc2NhcGUiLCJjb2xsYXBzYWJsZSIsIm5lZWRzT2Zmc2NyZWVuQWxwaGFDb21wb3NpdGluZyIsInN0eWxlIiwiUkNUVmlldyIsInJlbW92ZUNsaXBwZWRTdWJ2aWV3cyIsIlJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7Ozs7OztBQUVBLElBQU1BLDBCQUEwQixHQUFHQyxPQUFPLGdDQUExQzs7QUFFQSxJQUFNQyxNQUFNLEdBQUc7QUFDYkMsRUFBQUEsYUFBYSxFQUFFLElBREY7QUFFYkMsRUFBQUEsVUFBVSxFQUFFLElBRkM7QUFHYkMsRUFBQUEsb0JBQW9CLEVBQUUsSUFIVDtBQUliQyxFQUFBQSxrQkFBa0IsRUFBRSxJQUpQO0FBS2JDLEVBQUFBLHVCQUF1QixFQUFFLElBTFo7QUFNYkMsRUFBQUEsaUJBQWlCLEVBQUUsSUFOTjtBQU9iQyxFQUFBQSxtQkFBbUIsRUFBRSxJQVBSO0FBUWJDLEVBQUFBLGtCQUFrQixFQUFFLElBUlA7QUFTYkMsRUFBQUEsaUJBQWlCLEVBQUUsSUFUTjtBQVViQyxFQUFBQSx5QkFBeUIsRUFBRSxJQVZkO0FBV2JDLEVBQUFBLFFBQVEsRUFBRSxJQVhHO0FBWWJDLEVBQUFBLE1BQU0sRUFBRSxJQVpLO0FBYWJDLEVBQUFBLDhCQUE4QixFQUFFLElBYm5CO0FBY2JDLEVBQUFBLGtCQUFrQixFQUFFLElBZFA7QUFlYkMsRUFBQUEsUUFBUSxFQUFFLElBZkc7QUFnQmJDLEVBQUFBLHFCQUFxQixFQUFFLElBaEJWO0FBaUJiQyxFQUFBQSxrQkFBa0IsRUFBRSxJQWpCUDtBQWtCYkMsRUFBQUEsVUFBVSxFQUFFLElBbEJDO0FBbUJiQyxFQUFBQSxxQkFBcUIsRUFBRSxJQW5CVjtBQW9CYkMsRUFBQUEsV0FBVyxFQUFFLElBcEJBO0FBcUJiQyxFQUFBQSw4QkFBOEIsRUFBRSxJQXJCbkI7QUFzQmJDLEVBQUFBLEtBQUssRUFBRXhCO0FBdEJNLENBQWY7O0FBeUJBLElBQU15QixPQUFPLG1DQUNSdkIsTUFEUTtBQVFYd0IsRUFBQUEscUJBQXFCLEVBQUU7QUFSWixFQUFiOztBQVdBLElBQU1DLHlCQUF5QixHQUFHO0FBQ2hDekIsRUFBQUEsTUFBTSxFQUFFQSxNQUR3QjtBQUVoQ3VCLEVBQUFBLE9BQU8sRUFBRUE7QUFGdUIsQ0FBbEM7QUFLQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCRix5QkFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMgPSByZXF1aXJlKCcuL1JlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzJyk7XG5cbmNvbnN0IFVJVmlldyA9IHtcbiAgcG9pbnRlckV2ZW50czogdHJ1ZSxcbiAgYWNjZXNzaWJsZTogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eUFjdGlvbnM6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlMYWJlbDogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eUxpdmVSZWdpb246IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlSb2xlOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5U3RhdGVzOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5U3RhdGU6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlIaW50OiB0cnVlLFxuICBpbXBvcnRhbnRGb3JBY2Nlc3NpYmlsaXR5OiB0cnVlLFxuICBuYXRpdmVJRDogdHJ1ZSxcbiAgdGVzdElEOiB0cnVlLFxuICByZW5kZXJUb0hhcmR3YXJlVGV4dHVyZUFuZHJvaWQ6IHRydWUsXG4gIHNob3VsZFJhc3Rlcml6ZUlPUzogdHJ1ZSxcbiAgb25MYXlvdXQ6IHRydWUsXG4gIG9uQWNjZXNzaWJpbGl0eUFjdGlvbjogdHJ1ZSxcbiAgb25BY2Nlc3NpYmlsaXR5VGFwOiB0cnVlLFxuICBvbk1hZ2ljVGFwOiB0cnVlLFxuICBvbkFjY2Vzc2liaWxpdHlFc2NhcGU6IHRydWUsXG4gIGNvbGxhcHNhYmxlOiB0cnVlLFxuICBuZWVkc09mZnNjcmVlbkFscGhhQ29tcG9zaXRpbmc6IHRydWUsXG4gIHN0eWxlOiBSZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcyxcbn07XG5cbmNvbnN0IFJDVFZpZXcgPSB7XG4gIC4uLlVJVmlldyxcblxuICAvLyBUaGlzIGlzIGEgc3BlY2lhbCBwZXJmb3JtYW5jZSBwcm9wZXJ0eSBleHBvc2VkIGJ5IFJDVFZpZXcgYW5kIHVzZWZ1bCBmb3JcbiAgLy8gc2Nyb2xsaW5nIGNvbnRlbnQgd2hlbiB0aGVyZSBhcmUgbWFueSBzdWJ2aWV3cywgbW9zdCBvZiB3aGljaCBhcmUgb2Zmc2NyZWVuLlxuICAvLyBGb3IgdGhpcyBwcm9wZXJ0eSB0byBiZSBlZmZlY3RpdmUsIGl0IG11c3QgYmUgYXBwbGllZCB0byBhIHZpZXcgdGhhdCBjb250YWluc1xuICAvLyBtYW55IHN1YnZpZXdzIHRoYXQgZXh0ZW5kIG91dHNpZGUgaXRzIGJvdW5kLiBUaGUgc3Vidmlld3MgbXVzdCBhbHNvIGhhdmVcbiAgLy8gb3ZlcmZsb3c6IGhpZGRlbiwgYXMgc2hvdWxkIHRoZSBjb250YWluaW5nIHZpZXcgKG9yIG9uZSBvZiBpdHMgc3VwZXJ2aWV3cykuXG4gIHJlbW92ZUNsaXBwZWRTdWJ2aWV3czogdHJ1ZSxcbn07XG5cbmNvbnN0IFJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMgPSB7XG4gIFVJVmlldzogVUlWaWV3LFxuICBSQ1RWaWV3OiBSQ1RWaWV3LFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdE5hdGl2ZVZpZXdBdHRyaWJ1dGVzO1xuIl19