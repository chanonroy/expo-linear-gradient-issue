73fb0e5924b085913529d48d172c9faf
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var React = require('react');

var StyleSheet = require("../../StyleSheet/StyleSheet");

var TouchableWithoutFeedback = require("../../Components/Touchable/TouchableWithoutFeedback");

var View = require("../../Components/View/View");

var YellowBoxStyle = require("./YellowBoxStyle");

var YellowBoxPressable = function (_React$Component) {
  (0, _inherits2.default)(YellowBoxPressable, _React$Component);

  var _super = _createSuper(YellowBoxPressable);

  function YellowBoxPressable() {
    var _this;

    (0, _classCallCheck2.default)(this, YellowBoxPressable);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      pressed: false
    };

    _this._handlePressIn = function () {
      _this.setState({
        pressed: true
      });
    };

    _this._handlePressOut = function () {
      _this.setState({
        pressed: false
      });
    };

    return _this;
  }

  (0, _createClass2.default)(YellowBoxPressable, [{
    key: "render",
    value: function render() {
      var content = React.createElement(View, {
        style: StyleSheet.compose({
          backgroundColor: this.state.pressed ? this.props.backgroundColor.pressed : this.props.backgroundColor.default
        }, this.props.style)
      }, this.props.children);
      return this.props.onPress == null ? content : React.createElement(TouchableWithoutFeedback, {
        hitSlop: this.props.hitSlop,
        onPress: this.props.onPress,
        onPressIn: this._handlePressIn,
        onPressOut: this._handlePressOut
      }, content);
    }
  }]);
  return YellowBoxPressable;
}(React.Component);

YellowBoxPressable.defaultProps = {
  backgroundColor: {
    default: YellowBoxStyle.getBackgroundColor(0.95),
    pressed: YellowBoxStyle.getHighlightColor(1)
  }
};
module.exports = YellowBoxPressable;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlllbGxvd0JveFByZXNzYWJsZS5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJTdHlsZVNoZWV0IiwiVG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrIiwiVmlldyIsIlllbGxvd0JveFN0eWxlIiwiWWVsbG93Qm94UHJlc3NhYmxlIiwic3RhdGUiLCJwcmVzc2VkIiwiX2hhbmRsZVByZXNzSW4iLCJzZXRTdGF0ZSIsIl9oYW5kbGVQcmVzc091dCIsImNvbnRlbnQiLCJjb21wb3NlIiwiYmFja2dyb3VuZENvbG9yIiwicHJvcHMiLCJkZWZhdWx0Iiwic3R5bGUiLCJjaGlsZHJlbiIsIm9uUHJlc3MiLCJoaXRTbG9wIiwiQ29tcG9uZW50IiwiZGVmYXVsdFByb3BzIiwiZ2V0QmFja2dyb3VuZENvbG9yIiwiZ2V0SGlnaGxpZ2h0Q29sb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sK0JBQTFCOztBQUNBLElBQU1FLHdCQUF3QixHQUFHRixPQUFPLHVEQUF4Qzs7QUFDQSxJQUFNRyxJQUFJLEdBQUdILE9BQU8sOEJBQXBCOztBQUNBLElBQU1JLGNBQWMsR0FBR0osT0FBTyxvQkFBOUI7O0lBcUJNSyxrQjs7Ozs7Ozs7Ozs7Ozs7O1VBVUpDLEssR0FBZTtBQUNiQyxNQUFBQSxPQUFPLEVBQUU7QUFESSxLOztVQStCZkMsYyxHQUFpQixZQUFNO0FBQ3JCLFlBQUtDLFFBQUwsQ0FBYztBQUFDRixRQUFBQSxPQUFPLEVBQUU7QUFBVixPQUFkO0FBQ0QsSzs7VUFFREcsZSxHQUFrQixZQUFNO0FBQ3RCLFlBQUtELFFBQUwsQ0FBYztBQUFDRixRQUFBQSxPQUFPLEVBQUU7QUFBVixPQUFkO0FBQ0QsSzs7Ozs7Ozs2QkFqQ29CO0FBQ25CLFVBQU1JLE9BQU8sR0FDWCxvQkFBQyxJQUFEO0FBQ0UsUUFBQSxLQUFLLEVBQUVWLFVBQVUsQ0FBQ1csT0FBWCxDQUNMO0FBQ0VDLFVBQUFBLGVBQWUsRUFBRSxLQUFLUCxLQUFMLENBQVdDLE9BQVgsR0FDYixLQUFLTyxLQUFMLENBQVdELGVBQVgsQ0FBMkJOLE9BRGQsR0FFYixLQUFLTyxLQUFMLENBQVdELGVBQVgsQ0FBMkJFO0FBSGpDLFNBREssRUFNTCxLQUFLRCxLQUFMLENBQVdFLEtBTk47QUFEVCxTQVNHLEtBQUtGLEtBQUwsQ0FBV0csUUFUZCxDQURGO0FBYUEsYUFBTyxLQUFLSCxLQUFMLENBQVdJLE9BQVgsSUFBc0IsSUFBdEIsR0FDTFAsT0FESyxHQUdMLG9CQUFDLHdCQUFEO0FBQ0UsUUFBQSxPQUFPLEVBQUUsS0FBS0csS0FBTCxDQUFXSyxPQUR0QjtBQUVFLFFBQUEsT0FBTyxFQUFFLEtBQUtMLEtBQUwsQ0FBV0ksT0FGdEI7QUFHRSxRQUFBLFNBQVMsRUFBRSxLQUFLVixjQUhsQjtBQUlFLFFBQUEsVUFBVSxFQUFFLEtBQUtFO0FBSm5CLFNBS0dDLE9BTEgsQ0FIRjtBQVdEOzs7RUF2QzhCWixLQUFLLENBQUNxQixTOztBQUFqQ2Ysa0IsQ0FDR2dCLFksR0FFRDtBQUNKUixFQUFBQSxlQUFlLEVBQUU7QUFDZkUsSUFBQUEsT0FBTyxFQUFFWCxjQUFjLENBQUNrQixrQkFBZixDQUFrQyxJQUFsQyxDQURNO0FBRWZmLElBQUFBLE9BQU8sRUFBRUgsY0FBYyxDQUFDbUIsaUJBQWYsQ0FBaUMsQ0FBakM7QUFGTTtBQURiLEM7QUErQ1JDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLGtCQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBTdHlsZVNoZWV0ID0gcmVxdWlyZSgnLi4vLi4vU3R5bGVTaGVldC9TdHlsZVNoZWV0Jyk7XG5jb25zdCBUb3VjaGFibGVXaXRob3V0RmVlZGJhY2sgPSByZXF1aXJlKCcuLi8uLi9Db21wb25lbnRzL1RvdWNoYWJsZS9Ub3VjaGFibGVXaXRob3V0RmVlZGJhY2snKTtcbmNvbnN0IFZpZXcgPSByZXF1aXJlKCcuLi8uLi9Db21wb25lbnRzL1ZpZXcvVmlldycpO1xuY29uc3QgWWVsbG93Qm94U3R5bGUgPSByZXF1aXJlKCcuL1llbGxvd0JveFN0eWxlJyk7XG5cbmltcG9ydCB0eXBlIHtFZGdlSW5zZXRzUHJvcH0gZnJvbSAnLi4vLi4vU3R5bGVTaGVldC9FZGdlSW5zZXRzUHJvcFR5cGUnO1xuaW1wb3J0IHR5cGUge1ZpZXdTdHlsZVByb3B9IGZyb20gJy4uLy4uL1N0eWxlU2hlZXQvU3R5bGVTaGVldCc7XG5pbXBvcnQgdHlwZSB7UHJlc3NFdmVudH0gZnJvbSAnLi4vLi4vVHlwZXMvQ29yZUV2ZW50VHlwZXMnO1xuXG50eXBlIFByb3BzID0gJFJlYWRPbmx5PHt8XG4gIGJhY2tncm91bmRDb2xvcjogJFJlYWRPbmx5PHt8XG4gICAgZGVmYXVsdDogc3RyaW5nLFxuICAgIHByZXNzZWQ6IHN0cmluZyxcbiAgfH0+LFxuICBjaGlsZHJlbj86IFJlYWN0Lk5vZGUsXG4gIGhpdFNsb3A/OiA/RWRnZUluc2V0c1Byb3AsXG4gIG9uUHJlc3M/OiA/KGV2ZW50OiBQcmVzc0V2ZW50KSA9PiB2b2lkLFxuICBzdHlsZT86IFZpZXdTdHlsZVByb3AsXG58fT47XG5cbnR5cGUgU3RhdGUgPSB7fFxuICBwcmVzc2VkOiBib29sZWFuLFxufH07XG5cbmNsYXNzIFllbGxvd0JveFByZXNzYWJsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxQcm9wcywgU3RhdGU+IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wczogJFRFTVBPUkFSWSRvYmplY3Q8e3xcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICRURU1QT1JBUlkkb2JqZWN0PHt8ZGVmYXVsdDogc3RyaW5nLCBwcmVzc2VkOiBzdHJpbmd8fT4sXG4gIHx9PiA9IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHtcbiAgICAgIGRlZmF1bHQ6IFllbGxvd0JveFN0eWxlLmdldEJhY2tncm91bmRDb2xvcigwLjk1KSxcbiAgICAgIHByZXNzZWQ6IFllbGxvd0JveFN0eWxlLmdldEhpZ2hsaWdodENvbG9yKDEpLFxuICAgIH0sXG4gIH07XG5cbiAgc3RhdGU6IFN0YXRlID0ge1xuICAgIHByZXNzZWQ6IGZhbHNlLFxuICB9O1xuXG4gIHJlbmRlcigpOiBSZWFjdC5Ob2RlIHtcbiAgICBjb25zdCBjb250ZW50ID0gKFxuICAgICAgPFZpZXdcbiAgICAgICAgc3R5bGU9e1N0eWxlU2hlZXQuY29tcG9zZShcbiAgICAgICAgICB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoaXMuc3RhdGUucHJlc3NlZFxuICAgICAgICAgICAgICA/IHRoaXMucHJvcHMuYmFja2dyb3VuZENvbG9yLnByZXNzZWRcbiAgICAgICAgICAgICAgOiB0aGlzLnByb3BzLmJhY2tncm91bmRDb2xvci5kZWZhdWx0LFxuICAgICAgICAgIH0sXG4gICAgICAgICAgdGhpcy5wcm9wcy5zdHlsZSxcbiAgICAgICAgKX0+XG4gICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgPC9WaWV3PlxuICAgICk7XG4gICAgcmV0dXJuIHRoaXMucHJvcHMub25QcmVzcyA9PSBudWxsID8gKFxuICAgICAgY29udGVudFxuICAgICkgOiAoXG4gICAgICA8VG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrXG4gICAgICAgIGhpdFNsb3A9e3RoaXMucHJvcHMuaGl0U2xvcH1cbiAgICAgICAgb25QcmVzcz17dGhpcy5wcm9wcy5vblByZXNzfVxuICAgICAgICBvblByZXNzSW49e3RoaXMuX2hhbmRsZVByZXNzSW59XG4gICAgICAgIG9uUHJlc3NPdXQ9e3RoaXMuX2hhbmRsZVByZXNzT3V0fT5cbiAgICAgICAge2NvbnRlbnR9XG4gICAgICA8L1RvdWNoYWJsZVdpdGhvdXRGZWVkYmFjaz5cbiAgICApO1xuICB9XG5cbiAgX2hhbmRsZVByZXNzSW4gPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7cHJlc3NlZDogdHJ1ZX0pO1xuICB9O1xuXG4gIF9oYW5kbGVQcmVzc091dCA9ICgpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHtwcmVzc2VkOiBmYWxzZX0pO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFllbGxvd0JveFByZXNzYWJsZTtcbiJdfQ==