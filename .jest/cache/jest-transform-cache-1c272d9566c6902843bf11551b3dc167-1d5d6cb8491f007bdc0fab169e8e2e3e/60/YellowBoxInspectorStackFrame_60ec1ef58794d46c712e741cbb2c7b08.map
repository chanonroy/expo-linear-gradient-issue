{"version":3,"sources":["YellowBoxInspectorStackFrame.js"],"names":["React","require","StyleSheet","Text","YellowBoxPressable","YellowBoxStyle","YellowBoxInspectorStackFrame","props","frame","onPress","default","getBackgroundColor","pressed","getHighlightColor","styles","frameName","methodName","frameLocation","formatFrameLocation","file","lineNumber","column","queryIndex","indexOf","query","substr","path","location","lastIndexOf","create","paddingHorizontal","paddingVertical","color","getTextColor","fontSize","includeFontPadding","lineHeight","fontWeight","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst StyleSheet = require('../../StyleSheet/StyleSheet');\nconst Text = require('../../Text/Text');\nconst YellowBoxPressable = require('./YellowBoxPressable');\nconst YellowBoxStyle = require('./YellowBoxStyle');\n\nimport type {PressEvent} from '../../Types/CoreEventTypes';\nimport type {StackFrame} from '../../Core/NativeExceptionsManager';\n\ntype Props = $ReadOnly<{|\n  frame: StackFrame,\n  onPress?: ?(event: PressEvent) => void,\n|}>;\n\nconst YellowBoxInspectorStackFrame = (props: Props): React.Node => {\n  const {frame, onPress} = props;\n\n  return (\n    <YellowBoxPressable\n      backgroundColor={{\n        default: YellowBoxStyle.getBackgroundColor(0),\n        pressed: YellowBoxStyle.getHighlightColor(1),\n      }}\n      onPress={onPress}\n      style={styles.frame}>\n      <Text style={styles.frameName}>{frame.methodName}</Text>\n      <Text\n        ellipsizeMode=\"middle\"\n        numberOfLines={1}\n        style={styles.frameLocation}>\n        {formatFrameLocation(frame)}\n      </Text>\n    </YellowBoxPressable>\n  );\n};\n\nconst formatFrameLocation = (frame: StackFrame): string => {\n  const {file, lineNumber, column} = frame;\n  if (file == null) {\n    return '<unknown>';\n  }\n  const queryIndex = file.indexOf('?');\n  const query = queryIndex < 0 ? '' : file.substr(queryIndex);\n\n  const path = queryIndex < 0 ? file : file.substr(0, queryIndex);\n  let location = path.substr(path.lastIndexOf('/') + 1) + query;\n\n  if (lineNumber == null) {\n    return location;\n  }\n\n  location = location + ':' + lineNumber;\n\n  if (column == null) {\n    return location;\n  }\n\n  return location + ':' + column;\n};\n\nconst styles = StyleSheet.create({\n  frame: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n  },\n  frameName: {\n    color: YellowBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n  },\n  frameLocation: {\n    color: YellowBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n\nmodule.exports = YellowBoxInspectorStackFrame;\n"]}