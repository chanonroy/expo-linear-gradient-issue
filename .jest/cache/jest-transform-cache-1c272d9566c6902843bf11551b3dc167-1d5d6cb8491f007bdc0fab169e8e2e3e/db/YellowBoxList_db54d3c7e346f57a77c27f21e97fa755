b59851c91460ad73de8a4e7449c0a6a2
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](); return it.next.bind(it); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var Dimensions = require("../../Utilities/Dimensions");

var FlatList = require("../../Lists/FlatList");

var React = require('react');

var SafeAreaView = require("../../Components/SafeAreaView/SafeAreaView");

var StyleSheet = require("../../StyleSheet/StyleSheet");

var View = require("../../Components/View/View");

var YellowBoxButton = require("./YellowBoxButton");

var YellowBoxInspector = require("./YellowBoxInspector");

var YellowBoxListRow = require("./YellowBoxListRow");

var YellowBoxStyle = require("./YellowBoxStyle");

var VIEWPORT_RATIO = 0.5;
var MAX_ITEMS = Math.floor(Dimensions.get('window').height * VIEWPORT_RATIO / (YellowBoxListRow.GUTTER + YellowBoxListRow.HEIGHT));

var YellowBoxList = function (_React$Component) {
  (0, _inherits2.default)(YellowBoxList, _React$Component);

  var _super = _createSuper(YellowBoxList);

  function YellowBoxList() {
    var _this;

    (0, _classCallCheck2.default)(this, YellowBoxList);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      selectedCategory: null
    };

    _this._handleInspectorDismiss = function () {
      var category = _this.state.selectedCategory;

      if (category == null) {
        return;
      }

      _this.setState({
        selectedCategory: null
      }, function () {
        _this.props.onDismiss(category);
      });
    };

    _this._handleInspectorMinimize = function () {
      _this.setState({
        selectedCategory: null
      });
    };

    _this._handleRowPress = function (category) {
      _this.setState({
        selectedCategory: category
      });
    };

    return _this;
  }

  (0, _createClass2.default)(YellowBoxList, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var selectedWarnings = this.state.selectedCategory == null ? null : this.props.registry.get(this.state.selectedCategory);

      if (selectedWarnings != null) {
        return React.createElement(View, {
          style: StyleSheet.absoluteFill
        }, React.createElement(YellowBoxInspector, {
          onDismiss: this._handleInspectorDismiss,
          onMinimize: this._handleInspectorMinimize,
          warnings: selectedWarnings
        }));
      }

      var items = [];

      for (var _iterator = _createForOfIteratorHelperLoose(this.props.registry), _step; !(_step = _iterator()).done;) {
        var _ref = _step.value;

        var _ref2 = (0, _slicedToArray2.default)(_ref, 2);

        var _category = _ref2[0];
        var warnings = _ref2[1];
        items.unshift({
          category: _category,
          warnings: warnings
        });
      }

      var listStyle = {
        height: Math.min(items.length, MAX_ITEMS + 0.5) * (YellowBoxListRow.GUTTER + YellowBoxListRow.HEIGHT)
      };
      return items.length === 0 ? null : React.createElement(View, {
        style: styles.list
      }, React.createElement(View, {
        pointerEvents: "box-none",
        style: styles.dismissAll
      }, React.createElement(YellowBoxButton, {
        hitSlop: {
          bottom: 4,
          left: 4,
          right: 4,
          top: 4
        },
        label: "Dismiss All",
        onPress: this.props.onDismissAll
      })), React.createElement(FlatList, {
        data: items,
        keyExtractor: function keyExtractor(item) {
          return item.category;
        },
        renderItem: function renderItem(_ref3) {
          var item = _ref3.item;
          return React.createElement(YellowBoxListRow, (0, _extends2.default)({}, item, {
            onPress: _this2._handleRowPress
          }));
        },
        scrollEnabled: items.length > MAX_ITEMS,
        scrollsToTop: false,
        style: listStyle
      }), React.createElement(SafeAreaView, {
        style: styles.safeArea
      }));
    }
  }]);
  return YellowBoxList;
}(React.Component);

var styles = StyleSheet.create({
  list: {
    bottom: 0,
    position: 'absolute',
    width: '100%'
  },
  dismissAll: {
    bottom: '100%',
    flexDirection: 'row',
    justifyContent: 'flex-end',
    paddingBottom: 4,
    paddingEnd: 4,
    position: 'absolute',
    width: '100%'
  },
  safeArea: {
    backgroundColor: YellowBoxStyle.getBackgroundColor(0.95),
    marginTop: StyleSheet.hairlineWidth
  }
});
module.exports = YellowBoxList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,